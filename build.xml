<project name="Masserr" default="jar" basedir=".">
	<description>
		Masserr ANT build script. Requires that the project first has been build in IDEA, so relevant GUI classes and libs are present.
	</description>
	<property name="project_root" location="./"/>
	<!-- set global properties for this build -->
	<property name="src" location="${project_root}/src"/>
	<property name="build" location="${project_root}/build"/>
	<property name="dist" location="${project_root}/dist"/>
	<property name="lib" location="${project_root}/lib"/>
<!--	<property name="javadoc" location="${project_root}/javadoc"/>-->
	<property value="Robert Sandell" name="user.name"/>
	<property name="version" value="1.2.1b"/>
	<property name="classes" location="${project_root}/out/production/Masserr"/>
	<property name="release" location="C:/Programming/release/masserr/"/>
	<property name="catalina_jar" location="c:/Programming/Tomcat5/server/lib/catalina.jar"/>


	<target name="init">

		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>

	</target>

	<target name="create_version" description="Creates the version.dat">
		<java classpath="${classes}" classname="se.tdt.bobby.wodcc.version.Version" fork="true">
			<arg value="-create"/>
			<arg value="-version=${version}"/>
		</java>
	</target>

	<!--<target name="build" depends="init" description="build the project" >
			 <javac classpath="${classpath}" destdir="${build}" debug="on">
				<src path="${src}"/>
			</javac>
			 <buildnumber file="${build}/buildnumber.txt" />
	 </target>-->

	<target name="jar" depends="create_version" description="generate the distribution">
		<!--<copydir src="${classes}/se" dest="${build}/se"/>
		<copydir src="${classes}/com" dest="${build}/com"/>-->
		<delete dir="${dist}"/>
		<mkdir dir="${dist}/lib"/>


		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/lib/masserr.jar">
			<fileset dir="${classes}">
				<include name="se/**/*.*"/>
				<include name="com/**/*.*"/>
			</fileset>
			<manifest> <!--file="${dist}/MANIFEST.MF"-->
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="VERSION" value="${version}"/>
				<attribute name="Main-Class" value="se.tdt.bobby.wodcc.Main"/>
				<attribute name="Class-Path" value=". 3p/velocity-1.3.1.jar 3p/velocity-dep-1.3.1.jar"/>
				<attribute name="Created-By" value="Robert Sandell [the.bobby.is@home.se]"/>
			</manifest>
		</jar>
	</target>

	<target name="release" depends="jar" description="copy relevant directories to release dir">
		<delete dir="${release}"/>
		<mkdir dir="${release}"/>
		<!--<copydir src="lib/" dest="${release}/lib"/>
				 <copydir src="img/" dest="${release}/img"/>
				 <copydir src="install/" dest="${release}/install"/>
				 <copydir src="help/" dest="${release}/help"/>
				 <copydir src="config/" dest="${release}/config"/>-->
		<copy file="wodcc_empty.mdb" todir="${release}"/>
		<copy file="admin.bat" todir="${release}"/>
		<copy file="server.bat" todir="${release}"/>
		<copy file="masserr.bat" todir="${release}"/>
		<copy file="serversetup.bat" todir="${release}"/>
		<copy todir="${release}">
			<fileset dir=".">
				<!--<include name="lib/"/>-->
				<include name="img/"/>
				<include name="install/"/>
				<include name="help/"/>
				<include name="config/"/>
				<exclude name="**/*.psd"/>
				<exclude name="**/*.bmp"/>
			</fileset>
		</copy>
		<copy todir="${release}/lib/3p">
			<fileset dir="lib/"/>
		</copy>
		<copy file="${dist}/lib/masserr.jar" todir="${release}/lib"/>
	</target>

	<!--    <description target name="javadoc"-->
	<!--        description="create javadoc">-->
	<!---->
	<!--        <mkdir dir="javadoc"/>-->
	<!---->
	<!--        <javadoc-->
	<!--            destdir="${javadoc}"-->
	<!--            author="true"-->
	<!--            version="true">-->
	<!--            <fileset dir="${src}">-->
	<!--            </fileset>-->
	<!---->
	<!--        </javadoc>-->
	<!--    </target>-->

	<target name="clean"
			description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="DEBUG false" description="Search for the DEBUG variable and set it to false">
		<replace token="static final boolean DEBUG = true" value="static final boolean DEBUG = false"
				 dir="${src}"/>
	</target>

	<target name="DEBUG true" description="Search for the DEBUG variable and set it to true">
		<replace token="static final boolean DEBUG = false" value="static final boolean DEBUG = true"
				 dir="${src}"/>
	</target>


	<!--<property name="axis.home" location="D:/Program/Tomcat5.0/webapps/axis" />-->

	<!--<path id="axis.classpath">
		<fileset dir="${axis.home}/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>-->

	<!--<taskdef resource="axis-tasks.properties"
		classpathref="axis.classpath" />-->

	<!--<target name="deploy">-->
	<!--<copy todir="/opt/tomcat/webapps/axis/WEB-INF/classes">
		   <fileset dir="bin"
			   includes="**/*.class" />
	   </copy>-->
	<!--<axis-admin
			port="8080"
			hostname="localhost"
			failonerror="true"
			servletpath="/axis/services/AdminService"
			debug="true"
			xmlfile="deploy.wsdd" />
	</target>-->
	<!--<target name="undeploy">-->
	<!--<copy todir="/opt/tomcat/webapps/axis/WEB-INF/classes">
		   <fileset dir="bin"
			   includes="**/*.class" />
	   </copy>-->
	<!--<axis-admin
			port="8080"
			hostname="localhost"
			failonerror="true"
			servletpath="/axis/services/AdminService"
			debug="true"
			xmlfile="undeploy.wsdd" />
	</target>-->

</project>